library(ggplot2)
library(dplyr)
library(readr)
games <- read_csv("https://mac-stat.github.io/data/boardgamegeeks.csv")
View(games)
family <- lm(mean_rating ~ cat_family, data = games)
childrens <- lm(mean_rating ~ cat_childrens, data = games)
family <- lm(mean_rating ~ cat_family, data = games)
childrens <- lm(mean_rating ~ cat_childrens, data = games)
summary(family)
summary(childrens)
library(tidyverse)
#The runtime of the shows listed is in minutes and represents how long on average ONE episode of the show is/how long the movie is.
movieTitles <- read_csv("titles.csv") %>%
rename(show_title = title) %>%
mutate(seasons = ifelse(is.na(seasons), 0, seasons)) %>%
select(-type, -description, -age_certification, -imdb_id, -id)
setwd("~/School/2 - RProjects/STAT155/Final Project")
library(tidyverse)
#The runtime of the shows listed is in minutes and represents how long on average ONE episode of the show is/how long the movie is.
movieTitles <- read_csv("titles.csv") %>%
rename(show_title = title) %>%
mutate(seasons = ifelse(is.na(seasons), 0, seasons)) %>%
select(-type, -description, -age_certification, -imdb_id, -id)
globalViewership <- read_csv("all-weeks-global.csv") %>%
select(-season_title, -runtime, -weekly_views, -episode_launch_details, -weekly_rank, -is_staggered_launch) %>%
mutate(week = as.character(week)) %>%
filter(grepl('2022', week)) %>%
group_by(show_title, category) %>%
summarise(weekly_hours_viewed = sum(weekly_hours_viewed),
cumulative_top10 = sum(cumulative_weeks_in_top_10))
cleaned_data <- globalViewership %>%
inner_join(movieTitles, by = "show_title")
View(cleaned_data)
globalViewership <- read_csv("all-weeks-global.csv")
games <- games %>% mutate(popular = ifelse(mean_rating > 8 & p25_rvating > 6.5, TRUE, FALSE))
games <- games %>% mutate(popular = ifelse(mean_rating > 8 & p25_rating > 6.5, TRUE, FALSE))
library(ggplot2)
library(dplyr)
library(readr)
games <- read_csv("https://mac-stat.github.io/data/boardgamegeeks.csv")
games <- games %>% mutate(popular = ifelse(mean_rating > 8 & p25_rating > 6.5, 1, 0))
View(games)
ggplot(games, aes(popularity,game_weight)) +
geom_boxplot()
ggplot(games, aes(popular,game_weight)) +
geom_boxplot()
games <- games %>% mutate(popular = mean_rating > 8 & p25_rating > 6.5))
ggplot(games, aes(popular,game_weight)) +
geom_boxplot()
games <- games %>% mutate(popular = (mean_rating > 8 & p25_rating > 6.5)))
games <- games %>% mutate(popular = mean_rating > 8 & p25_rating > 6.5)
ggplot(games, aes(popular,game_weight)) +
geom_boxplot()
ggplot(games, aes(popular,game_weight)) +
geom_boxplot() +
labs(title = "Game Weight vs Popularity", x = "Popular", y = "Game Weight") +
theme_bw()
ggplot(games, aes(x = popular, y = game_weight)) +
geom_boxplot() +
labs(title = "Game Weight vs Popularity", x = "Popular", y = "Game Weight") +
theme_bw()
ggplot(games, aes(x = popular, y = factor(kickstarted))) +
geom_bar(position = "dodge") +
theme_bw()
ggplot(games, aes(x = popular, fill = factor(kickstarted))) +
geom_bar(position = "dodge") +
theme_bw()
ggplot(games, aes(x = popular, fill = factor(kickstarted))) +
geom_bar(position = "dodge") +
labs(title = "Kickstarted vs Popularity", x = "Popular", y = "# of Games", legend = "Kickstared?")
theme_bw()
ggplot(games, aes(x = popular, fill = factor(kickstarted))) +
geom_bar(position = "dodge") +
labs(title = "Kickstarted vs Popularity", x = "Popular", y = "# of Games")
theme_bw()
logreg <- glm(popular ~ game_weight, data = games)
summary(logreg)
logreg <- glm(popular ~ game_weight, data = games)
summary(logreg)
coef(logreg)
popularityModel <- glm(popular ~ game_weight, data = games)
summary(popularityModel)
coef(popularityModel)
kickstartedModel <- glm(popular ~ kickstarted, data = games)
summary(kickstartedModel)
coef(kickstartedModel)
family <- lm(mean_rating ~ cat_family, data = games)
childrens <- lm(mean_rating ~ cat_childrens + cat_family, data = games)
summary(family)
summary(childrens)
popularityModel <- glm(popular ~ game_weight, data = games)
summary(popularityModel)
coef(popularityModel)
odds(coef(popularityModel))
popularityModel <- glm(popular ~ game_weight, data = games)
summary(popularityModel)
coef(popularityModel)
odd(coef(popularityModel))
popularityModel <- glm(popular ~ game_weight, data = games)
summary(popularityModel)
exp(coef(popularityModel))
popularityModel <- glm(popular ~ game_weight, data = games, family = binomial)
summary(popularityModel)
exp(coef(popularityModel))
kickstartedModel <- glm(popular ~ kickstarted, data = games, family = binomial)
summary(kickstartedModel)
coef(kickstartedModel)
kickstartedModel <- glm(popular ~ kickstarted, data = games, family = binomial)
summary(kickstartedModel)
exp(coef(kickstartedModel))
ggplot(games, aes(x = popular, fill = factor(kickstarted))) +
geom_bar(position = "fill") +
labs(title = "Kickstarted vs Popularity", x = "Popular", y = "# of Games")
theme_bw()
family <- lm(mean_rating ~ cat_family, data = games)
summary(family)
childrens <- lm(mean_rating ~ cat_childrens + cat_family, data = games)
summary(childrens)
ggplot(binary_outcome_games, aes(x = game_weight, y = popular)) +
geom_boxplot() +
labs(y= "Popularity", title = "Popularity based on Complexity of Games")
binary_outcome_games <- games %>%
mutate(popular = mean_rating > 8 & p25_rating > 6.5)
ggplot(binary_outcome_games, aes(x = game_weight, y = popular)) +
geom_boxplot() +
labs(y= "Popularity", title = "Popularity based on Complexity of Games")
ggplot(games, aes(x = popular, y = game_weight)) +
geom_boxplot() +
labs(title = "Game Complextity vs Popularity", x = "Popular", y = "Complexity") +
theme_bw()
ggplot(binary_outcome_games, aes(x = factor(kickstarted), fill = popular)) +
geom_bar(position = "fill") +
labs(x = "Kickstarted") +
ggtitle("Ratings by Kickstarter Status")
ggplot(games, aes(x = factor(kickstarted), fill = popular)) +
geom_bar(position = "fill") +
labs(title = "Kickstarted vs Popularity", x = "Popular", y = "# of Games")
theme_bw()
ggplot(games, aes(x = factor(kickstarted), fill = popular)) +
geom_bar(position = "fill") +
labs(title = "Kickstarted vs Popularity")
theme_bw()
popularityModel <- glm(popular ~ game_weight, data = games, family = "binomial")
summary(popularityModel)
exp(coef(popularityModel))
popularityModel <- glm(popular ~ game_weight, data = games, family = binomial)
summary(popularityModel)
exp(coef(popularityModel))
kickstarted_lm <- glm(popular ~ factor(kickstarted), data = binary_outcome_games, family = "binomial")
exp(coef(summary(kickstarted_lm)))
#The runtime of the shows listed is in minutes and represents how long on average ONE episode of the show is/how long the movie is.
movieTitles <- read_csv("titles.csv") %>%
rename(show_title = title) %>%
mutate(seasons = ifelse(is.na(seasons), 0, seasons)) %>%
select(-type, -description, -age_certification, -imdb_id, -id)
globalViewership <- read_csv("all-weeks-global.csv") %>%
select(-season_title, -runtime, -weekly_views, -episode_launch_details, -weekly_rank, -is_staggered_launch) %>%
mutate(week = as.character(week)) %>%
filter(grepl('2022', week)) %>%
group_by(show_title, category) %>%
summarise(weekly_hours_viewed = sum(weekly_hours_viewed),
cumulative_top10 = sum(cumulative_weeks_in_top_10))
cleaned_data <- globalViewership %>%
inner_join(movieTitles, by = "show_title")
# Introduction (Table 1)
summary(cleaned_data)
View(cleaned_data)
bikes <- read_csv("https://mac-stat.github.io/data/bikeshare.csv")
View(bikes)
expansions_trend <- games %>%
mutate(expansion_group = ifelse(num_expansions >= 5, "5+", as.character(num_expansions))) %>%
group_by(expansion_group) %>%
summarize(avg_rating = mean(mean_rating, na.rm = TRUE), n = n())
ggplot(expansions_trend, aes(x = expansion_group, y = avg_rating)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = round(avg_rating, 2)), vjust = -0.5) +
labs(title = "Impact of Number of Expansions to Ratings", x = "Number of Expansions", y = "Average rating") +
theme_minimal() +
coord_cartesian(ylim = c(min(expansions_trend$avg_rating) - 0.5, max(expansions_trend$avg_rating) + 0.5))
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point()
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point() +
geom_smooth()
ggplot(games, aes(x = num_want, y = num_owned)) +
geom_point() +
geom_smooth()
# labs(title = )
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point() +
geom_smooth() +
labs(x = "# of People Wishlisted", y = "# of Owners", title = "Comparison of # of Wishlists to Owning the game") +
theme_bw()
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point() +
geom_smooth() +
labs(x = "# of People Wishlisted", y = "# of Owners", title = "Comparison on # of Wishlists to Owning the game") +
theme_bw()
ggplot(games, aes(x = game_weight, y = mean_rating, color = com_age_rec)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(x = "Average Rating", y = "Complexity of games", title = "Predicting Game Ratings based on Complexity and Age Recommendation", color = "Age Recommendation")
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point(alpha = .5, color = "red") +
geom_smooth() +
labs(x = "# of People Wishlisted", y = "# of Owners", title = "Comparison on # of Wishlists to Owning the game") +
theme_bw()
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point(alpha = .5) +
geom_smooth() +
labs(x = "# of People Wishlisted", y = "# of Owners", title = "Comparison on # of Wishlists to Owning the game") +
theme_bw()
ggplot(games, aes(x = num_wish, y = num_owned)) +
geom_point(alpha = .3) +
geom_smooth() +
labs(x = "# of People Wishlisted", y = "# of Owners", title = "Comparison on # of Wishlists to Owning the game") +
theme_bw()
ggplot(games, aes(x = year_published, y = com_age_rec, fill = cat_strategy)) +
geom_bar(position = "dodge")
ggplot(games, aes(x = year_published, y = com_age_rec, fill = cat_strategy)) +
geom_histogram()
ggplot(games, aes(x = year_published, y = com_age_rec, fill = cat_strategy)) +
geom_point()
ggplot(games, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>% filter(year_published > 1950)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950) %>%
mutate(war_or_family = ifelse(cat_war = 1, war, ifelse(cat_family = 1), family, NA))
gamesRecent <- games %>%
filter(year_published > 1950) %>%
mutate(war_or_family = ifelse(cat_war = 1, war, ifelse(cat_family = 1), family, NA))
gamesRecent <- games %>%
filter(year_published > 1950) %>%
mutate(war_or_family = if(cat_war = 1, war, ifelse(cat_family = 1), family, NA))
gamesRecent <- games %>%
filter(year_published > 1950, cat_strategy == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_strategy == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_war == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_childrens == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_family == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_family == 1)
ggplot(gamesRecent, aes(x = year_published, y = mgs_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_family == 1)
ggplot(gamesRecent, aes(x = year_published, y = mfg_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_war == 1)
ggplot(gamesRecent, aes(x = year_published, y = mfg_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_childrens == 1)
ggplot(gamesRecent, aes(x = year_published, y = mfg_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950)
ggplot(gamesRecent, aes(x = year_published, y = mfg_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950)
ggplot(gamesRecent, aes(x = year_published, y = mfg_age_rec, shape = cat_war)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_war)
gamesRecent <- games %>%
filter(year_published > 1950, cat_war ==1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point()
gamesRecent <- games %>%
filter(year_published > 1950, cat_war == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point(alpha = .3) +
labs(title = "Community Age Recommendations of War Board Games from 1950 - 2021",
x = "Year Published",
y = "Recommended Playing Age") +
theme_bw()
gamesRecent <- games %>%
filter(year_published > 1950, cat_war == 1)
ggplot(gamesRecent, aes(x = year_published, y = com_age_rec)) +
geom_point(alpha = .6) +
labs(title = "Community Age Recommendations of War Board Games from 1950 - 2021",
x = "Year Published",
y = "Recommended Playing Age") +
theme_bw()
